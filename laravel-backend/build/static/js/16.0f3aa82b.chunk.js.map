{"version":3,"file":"static/js/16.0f3aa82b.chunk.js","mappings":"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","sources":["app/pages/mainPages/AllComments.tsx","app/pages/mainPages/ApiForgetdata.tsx","../node_modules/antd/es/row/index.js"],"sourcesContent":["import React, {useEffect, useState, useRef, useContext} from 'react'\nimport {\n  Table,\n  Pagination,\n  Form,\n  InputRef,\n  Input,\n  message,\n  Button,\n  Row,\n  Col,\n  DatePicker,\n  Space,\n  Select,\n  Tooltip\n} from 'antd'\n\nimport {Apifordataget} from './ApiForgetdata'\nimport {Link} from 'react-router-dom'\nimport moment from 'moment'\nimport type {FormInstance} from 'antd/es/form'\nimport {mainConfig} from '../../../config/mainConfig'\nconst {Option} = Select\nconst {RangePicker} = DatePicker\nconst EditableContext = React.createContext<FormInstance<any> | null>(null)\nlet token = ''\ninterface Item {\n  key: string\n  name: string\n  age: string\n  address: string\n}\n\ninterface EditableRowProps {\n  index: number\n}\n\nconst EditableRow: React.FC<EditableRowProps> = ({index, ...props}) => {\n  const [form] = Form.useForm()\n  return (\n    <Form form={form} component={false}>\n      <EditableContext.Provider value={form}>\n        <tr {...props} />\n      </EditableContext.Provider>\n    </Form>\n  )\n}\n\ninterface EditableCellProps {\n  title: React.ReactNode\n  editable: boolean\n  children: React.ReactNode\n  dataIndex: keyof Item\n  record: Item\n  handleSave: (record: Item) => void\n}\n\nconst EditableCell: React.FC<EditableCellProps> = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const form = useContext(EditableContext)!\n\n  useEffect(() => {\n    if (editing) {\n      inputRef.current?.focus()\n    }\n  }, [editing])\n\n  const toggleEdit = () => {\n    setEditing(!editing)\n    form.setFieldsValue({[dataIndex]: record[dataIndex]})\n  }\n\n  const save = async () => {\n    try {\n      const values = await form.validateFields()\n\n      toggleEdit()\n      handleSave({...record, ...values})\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo)\n    }\n  }\n\n  let childNode = children\n\n  if (editable) {\n    childNode = editing ? (\n      <Form.Item\n        style={{margin: 0}}\n        name={dataIndex}\n        rules={[\n          {\n            required: true,\n            message: `${title} is required.`,\n          },\n        ]}\n      >\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n      </Form.Item>\n    ) : (\n      <div className='editable-cell-value-wrap' style={{paddingRight: 24}} onClick={toggleEdit}>\n        {children}\n      </div>\n    )\n  }\n\n  return <td {...restProps}>{childNode}</td>\n}\n\ntype EditableTableProps = Parameters<typeof Table>[0]\n\ninterface DataType {\n  key: React.Key\n  name: string\n  age: string\n  address: string\n  comment_id: any\n  comment: any\n}\n\ntype ColumnTypes = Exclude<EditableTableProps['columns'], undefined>\n\nconst defaultColumns: (ColumnTypes[number] & {editable?: boolean; dataIndex: string})[] = [\n  {\n    title: 'Agg Code',\n    dataIndex: 'ac4',\n    key: 'ac4',\n    sorter: true,\n    render: (item: any, record: any) => {\n        \n        \n      return (\n        <Tooltip placement='topLeft' title={'View Product Page'}>\n          <Link\n            // target='_blank'\n            to={{\n              pathname: '/product',\n\n              state: {prod_id: record.productpage_id, data: record},\n            }}\n          >\n            {item}\n          </Link>\n        </Tooltip>\n      )\n    },\n  },\n  {\n    title: 'Spot Code',\n    dataIndex: 'spot',\n    key: 'spot',\n    sorter: true,\n  },\n  {\n    title: 'Comment',\n    dataIndex: 'comment',\n    key: 'comment',\n    sorter: true,\n    editable: true,\n  },\n  {\n    title: 'Added by',\n    dataIndex: 'created_by',\n    key: 'created_by',\n    sorter: true,\n  },\n  {\n    title: 'Added on',\n    dataIndex: 'created_on',\n    key: 'created_on',\n    sorter: true,\n    render: (item: string) => {\n      if (!item) return <>-</>\n      return moment(item).format('DD-MMM-YYYY')\n    },\n  },\n]\n\nconst AllComments = (props: any) => {\n  const [form] = Form.useForm()\n\n  const [data, setData] = useState<[]>([])\n  const [totalPage, setTotalPage] = useState<any>(1)\n  const [loader, setLoader] = useState<any>(false)\n  const [currentPage, setCurrentPage] = useState<any>(1)\n  const [username, setusername] = useState<any>(null)\n\n  const [users, setUsers] = useState<any[]>([])\n\n  const [sorter, setsorter] = useState<any>({\n    columnKey: 'created_on',\n    order: 'descend',\n  })\n  useEffect(() => {\n    getData()\n  }, [sorter, currentPage])\n  const getData = async () => {\n    setLoader(true)\n    let api = `/api/get-comments/${currentPage}/${\n      sorter && sorter.columnKey ? sorter.columnKey : 'created_on'\n    }/${sorter && sorter.order && sorter.order == 'ascend' ? 1 : 0}`\n\n    let response: any = await Apifordataget(api)\n    if (response && response.message) {\n      console.log(response,\"response\")\n      setUsers(response.data.users)\n      setData(response.data.comments)\n      setTotalPage(response.data.comments_count)\n      setLoader(false)\n    }\n  }\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  }\n  const columns = defaultColumns.map((col) => {\n    if (!col.editable) {\n      return col\n    }\n    return {\n      ...col,\n      onCell: (record: DataType) => ({\n        record,\n        editable: col.editable,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        handleSave,\n      }),\n    }\n  })\n  const handleSave = (row: DataType) => {\n    let payload = {\n      content: row.comment,\n    }\n    try {\n      fetch(`${mainConfig.MAIN_ENDPOINT}/api/update-task-comment/${row.comment_id}`, {\n        method: 'put',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      })\n        .then(function (response) {\n          if (response.status != 200) {\n            return\n          }\n\n          response.json().then(function (data) {\n            message.success(data.message)\n            getData()\n          })\n        })\n        .catch(function (err) {})\n    } catch (err) {\n      console.log('ERR>>>', err)\n    }\n  }\n  const onFinish=(data:any)=>{\n    \n      var payLoad={\n        added_by:data.addedby,\n        keyword:data.keyword,\n        from_date:data?.dateRange?moment(data.dateRange[0]).format('YYYY-MM-DD'):\"\",\n        to_date:data?.dateRange?moment(data.dateRange[1]).format('YYYY-MM-DD'):\"\",\n\n\n      }\n      try {\n        fetch(`${mainConfig.MAIN_ENDPOINT}/api/search-product-comment/${currentPage}/${\n          sorter && sorter.columnKey ? sorter.columnKey : 'created_on'\n        }/${sorter && sorter.order && sorter.order == 'ascend' ? 1 : 0}`, {\n          method: 'post',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payLoad),\n        })\n          .then(function (response) {\n            if (response.status != 200) {\n              return\n            }\n            response.json().then(function (data) {\n           \n              setData(data.data.comments)\n              setTotalPage(data.data.rowCnt)\n              // message.success(data.message)\n              // getData()\n            })\n          })\n          .catch(function (err) {})\n      } catch (err) {\n        console.log('ERR>>>', err)\n      }\n\n  }\n  const onReset=()=>{\n  \n    \n    \n  }\n  token = JSON.parse(localStorage.getItem('portalUserDataToken') || '')\n\n  return (\n    <>\n      <div className='pt-4 m-2'>\n        <div className='card'>\n          <div className='card-body py-3 '>\n            <div className='row m-4 p-2'>\n            <span\n                      className='card-label fw-bolder fs-3 mb-1'\n                      style={{color: 'rgb(138, 38, 80)'}}\n                    >\n                      Comments\n                    </span>\n              <Row>\n                <Form layout='inline' name='horizontal_login' onFinish={onFinish} form={form}>\n                  <Space>\n                   \n\n                    <Form.Item\n                      name='dateRange'\n                      // rules={[\n                      //   {\n                      //     required: true,\n                      //     message: 'Please input your username!',\n                      //   },\n                      // ]}\n                    >\n                      <RangePicker />\n                    </Form.Item>\n                    <Form.Item\n                      name='keyword'\n                      // rules={[\n                      //   {\n                      //     required: true,\n                      //     message: 'Please input your username!',\n                      //   },\n                      // ]}\n                    >\n                      <Input placeholder='AC4/Product Code/Comment text'/>\n                    </Form.Item>\n                    <Form.Item\n                      name='addedby'\n                      // rules={[\n                      //   {\n                      //     required: true,\n                      //     message: 'Please input your username!',\n                      //   },\n                      // ]}\n                    >\n                      <Select\n                                  placeholder='Please Select Added By'\n                                  value={username}\n                                  onChange={(e) => {\n                                    setusername(e)\n                                  }}\n                                >\n                                  {users.map((a) => {\n                                    return <Option value={a.id}>{a.username}</Option>\n                                  })}\n                                </Select>\n                    </Form.Item>\n\n                    <Button type={'primary'} htmlType='submit'>Submit</Button>\n                    <Button type={'primary'} onClick={()=>{\n                      setCurrentPage(1)\n                      getData()\n\nform.resetFields()}} htmlType=\"reset\">Reset</Button>\n\n                    <Link to={{pathname: '/home'}}>\n                      <Button type={'primary'}>Back To Home</Button>\n                    </Link>\n                  </Space>\n                </Form>\n              </Row>\n            </div>\n\n            <div className='tab-content' id='myTabContent'>\n              <div className='tab-pane fade show active ' id={''} role='tabpanel'>\n                <Table\n                  columns={columns as ColumnTypes}\n                  components={components}\n                  dataSource={data}\n                  loading={loader}\n                  onChange={(val: any, filter: any, sorter: any, extra: any) => {\n                    setsorter({\n                      ...sorter,\n                    })\n                  }}\n                  scroll={{\n                    x: 'auto',\n                    y: 'auto',\n                  }}\n                  pagination={false}\n                />\n                <div className='row text-end m-4'>\n                  <Pagination\n                    defaultCurrent={currentPage}\n                    defaultPageSize={10}\n                    current={currentPage}\n                    total={totalPage}\n                    onChange={(e) => {\n                      setCurrentPage(e)\n                    }}\n                    hideOnSinglePage={true}\n                    showSizeChanger={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default AllComments\n","import { mainConfig } from \"../../../config/mainConfig\"\nconst token=JSON.parse(localStorage.getItem('portalUserDataToken') || '')\n\nexport const Apifordataget =(api:any)=>{\n    return new Promise<void>((resolve, reject) => {\n        try {\n            fetch(`${mainConfig.MAIN_ENDPOINT}${api}`, {\n              method: 'get',\n              headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n              },\n            })\n              .then((data: any) => {\n                data.json().then(function (resp: any) {\n                    resolve(resp)\n                })\n              })\n              .catch(function (error) {\n                console.log('Request failed', error)\n              })\n          } catch (err) {\n            console.log('ERR>>>', err)\n          }\n    })\n}\nexport const ApifordataPost =(api:any,data:any)=>{\n\n  // return \n  return new Promise<void>((resolve, reject) => {\n      try {\n          fetch(`${mainConfig.MAIN_ENDPOINT}${api}`, {\n            method: 'Post',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n          })\n            .then((data: any) => {\n              data.json().then(function (resp: any) {\n                  resolve(resp)\n              })\n            })\n            .catch(function (error) {\n              console.log('Request failed', error)\n            })\n        } catch (err) {\n          console.log('ERR>>>', err)\n        }\n  })\n}","import { Row } from '../grid';\nexport default Row;"],"names":["Option","Select","RangePicker","DatePicker","EditableContext","React","token","EditableRow","_ref","index","props","form","Form","useForm","_jsx","component","children","Provider","value","EditableCell","_ref2","title","editable","dataIndex","record","handleSave","restProps","editing","setEditing","useState","inputRef","useRef","useContext","useEffect","_inputRef$current","current","focus","toggleEdit","setFieldsValue","save","async","values","validateFields","errInfo","console","log","childNode","Item","style","margin","name","rules","required","message","concat","Input","ref","onPressEnter","onBlur","className","paddingRight","onClick","defaultColumns","key","sorter","render","item","Tooltip","placement","Link","to","pathname","state","prod_id","productpage_id","data","moment","format","_Fragment","setData","totalPage","setTotalPage","loader","setLoader","currentPage","setCurrentPage","username","setusername","users","setUsers","setsorter","columnKey","order","getData","api","response","Apifordataget","comments","comments_count","components","body","row","cell","columns","map","col","onCell","payload","content","comment","fetch","mainConfig","MAIN_ENDPOINT","comment_id","method","headers","Authorization","Accept","JSON","stringify","then","status","json","success","catch","err","parse","localStorage","getItem","_jsxs","color","Row","layout","onFinish","payLoad","added_by","addedby","keyword","from_date","dateRange","to_date","rowCnt","Space","placeholder","onChange","e","a","id","Button","type","htmlType","resetFields","role","Table","dataSource","loading","val","filter","extra","scroll","x","y","pagination","Pagination","defaultCurrent","defaultPageSize","total","hideOnSinglePage","showSizeChanger","Promise","resolve","reject","resp","error","ApifordataPost"],"sourceRoot":""}
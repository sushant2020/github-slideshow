{"version":3,"file":"static/js/447.08a5280e.chunk.js","mappings":"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","sources":["app/pages/mainPages/SupplierList.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {FC, useEffect, useState} from 'react'\nimport {useIntl} from 'react-intl'\nimport {Link, withRouter, useHistory} from 'react-router-dom'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport {PageTitle} from '../../../_metronic/layout/core'\nimport {Pagination, Skeleton, Spin} from 'antd'\nimport PapaParse from 'papaparse'\nimport {mainConfig} from '../../../config/mainConfig'\n\nlet count = 1,\n  user = '',\n  token = ''\n\n let  data={}\n\nconst SupplierListWrapper: FC = () => {\n  const intl = useIntl()\n  const history = useHistory()\n  const [loading, setloading] = useState<any>(false)\n  const [supplierData, setSupplierData] = useState<any[]>([])\n  const [customerData, setcustomerData] = useState<any[]>([])\n  const [supplierTableData, setSupplierTableData] = useState<any[]>([])\n  const [customerTableData, setCustomerTableData] = useState<any[]>([])\n  const [pageNumber, setpageNumber] = useState<any>(1)\n  const [rowCount, setrowCount] = useState<any>(1)\n  const [rowCountCustomer, setrowCountCustomer] = useState<any>(1)\n  const [defaultColumnName, setdefaultColumnName] = useState<any>('Supplier_Code')\n  const [defaultColumnNameCustomer, setdefaultColumnNameCustomer] = useState<any>('Customer_Code')\n  const [sortOrder, setsortOrder] = useState<any>(1)\n  const [loadingT, setloadingT] = useState<any>(false)\n  const [supplierCodeFlag, setsupplierCodeFlag] = useState<any>('Asc')\n  const [customerCodeFlag, setcustomerCodeFlag] = useState<any>('Asc')\n\n  const [supplierNameFlag, setsupplieNameFlag] = useState<any>('Asc')\n  const [customerNameFlag, setcustomerNameFlag] = useState<any>('Asc')\n\n  const [supplierTypeFlag, setsupplierTypeFlag] = useState<any>('Asc')\n  const [tabSelected, settabSelected] = useState<any>('Suppliers')\n\n  useEffect(() => {\n    if (!user || !user.includes('Administrator')) {\n      history.push({\n        pathname: '/home',\n      })\n    } else {\n      setsupplierCodeFlag('Asc')\n      setcustomerCodeFlag('Asc')\n      setsortOrder(1)\n      setloading(true)\n      setloadingT(true)\n      getAllSuppliers(pageNumber, defaultColumnName, sortOrder)\n      getAllSuppliersCustomer(pageNumber, defaultColumnNameCustomer, sortOrder)\n    }\n  }, [])\n\n  function getAllSuppliers(pageNumber: any, defaultColumnName: any, sortOrder: any) {\n    try {\n      fetch(\n        `${mainConfig.MAIN_ENDPOINT}/api/suppliers/${pageNumber}/${defaultColumnName}/${sortOrder}`,\n        {\n          method: 'get',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n        .then(function (response) {\n          if (response.status != 200) {\n            localStorage.clear()\n            window.location.reload()\n          }\n\n          response.json().then(function (data) {\n            setSupplierData(data.data.suppliers)\n            setSupplierTableData(data.data.suppliers)\n            setrowCount(data.data.rowCnt)\n            setloadingT(false)\n            setloading(false)\n          })\n        })\n        .catch(function (err) {\n          console.log('Fetch Error :-S', err)\n          setloadingT(false)\n          setloading(false)\n        })\n    } catch (err) {\n      console.log('ERR>>>', err)\n    }\n  }\n\n  function getAllSuppliersCustomer(\n    pageNumber: any,\n    defaultColumnNameCustomer: any,\n    sortOrder: any\n  ) {\n    try {\n      fetch(\n        `${mainConfig.MAIN_ENDPOINT}/api/customers/${pageNumber}/${defaultColumnNameCustomer}/${sortOrder}`,\n        {\n          method: 'get',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n        .then(function (response) {\n          if (response.status != 200) {\n            localStorage.clear()\n            window.location.reload()\n          }\n\n          response.json().then(function (data) {\n\n            setcustomerData(data.data.customers)\n            setCustomerTableData(data.data.customers)\n            setrowCountCustomer(data.data.rowCnt)\n            setloadingT(false)\n            setloading(false)\n          })\n        })\n        .catch(function (err) {\n          console.log('Fetch Error :-S', err)\n          setloadingT(false)\n          setloading(false)\n        })\n    } catch (err) {\n      console.log('ERR>>>', err)\n    }\n  }\n\n  function onSearchProduct(e: any) {\n    let n = e.target.value\n    let searchdata = new Array()\n    if (tabSelected == 'Customers') {\n      customerData.map((i: any, l: any) => {\n        if (\n          i.Customer_Code.toLowerCase().includes(n.toLowerCase()) ||\n          i.Customer_Name.toLowerCase().includes(n.toLowerCase())\n          // ||\n          // i.Supplier_Type.toLowerCase().includes(n.toLowerCase())\n        ) {\n          searchdata.push(i)\n        }\n      })\n      setcustomerData(searchdata)\n\n      if (n == '') {\n        setcustomerData(customerTableData)\n      }\n    } else {\n      supplierData.map((i: any, l: any) => {\n        if (\n          i.Supplier_Code.toLowerCase().includes(n.toLowerCase()) ||\n          i.Supplier_Name.toLowerCase().includes(n.toLowerCase())\n          // ||\n          // i.Supplier_Type.toLowerCase().includes(n.toLowerCase())\n        ) {\n          searchdata.push(i)\n        }\n      })\n      setSupplierData(searchdata)\n\n      if (n == '') {\n        setSupplierData(supplierTableData)\n      }\n    }\n  }\n\n  function handleTableChange(page: any) {\n    setloadingT(true)\n    setpageNumber(page)\n    if (tabSelected == 'Customers') {\n      getAllSuppliersCustomer(pageNumber, defaultColumnNameCustomer, sortOrder)\n    } else {\n      getAllSuppliers(pageNumber, defaultColumnName, sortOrder)\n    }\n  }\n  function onSortSupplierList(data: any) {\n    setloadingT(true)\n    if (data == 'Supplier_Code') {\n      if (supplierCodeFlag === 'Asc') {\n        setsortOrder(1)\n        getAllSuppliers(pageNumber, defaultColumnName, sortOrder)\n        setsupplierCodeFlag('Desc')\n        return\n      }\n\n      if (supplierCodeFlag === 'Desc') {\n        setsortOrder(0)\n\n        getAllSuppliers(pageNumber, defaultColumnName, sortOrder)\n        setsupplierCodeFlag('Asc')\n        return\n      }\n    }\n\n    if (data == 'Supplier_Name') {\n      if (supplierNameFlag == 'Asc') {\n        setsortOrder(1)\n        getAllSuppliers(pageNumber, defaultColumnName, sortOrder)\n        setsupplieNameFlag('Desc')\n      }\n\n      if (supplierNameFlag == 'Desc') {\n        setsortOrder(0)\n\n        getAllSuppliers(pageNumber, defaultColumnName, sortOrder)\n        setsupplieNameFlag('Asc')\n      }\n    }\n  }\n  function onSortSupplierListCustomers(data: any) {\n    setloadingT(true)\n    if (data == 'Customer_Code') {\n      if (customerCodeFlag === 'Asc') {\n        setsortOrder(1)\n        getAllSuppliersCustomer(pageNumber, defaultColumnNameCustomer, sortOrder)\n        setcustomerCodeFlag('Desc')\n        return\n      }\n\n      if (customerCodeFlag === 'Desc') {\n        setsortOrder(0)\n\n        getAllSuppliersCustomer(pageNumber, defaultColumnNameCustomer, sortOrder)\n        setcustomerCodeFlag('Asc')\n        return\n      }\n    }\n\n    if (data == 'Customer_Name') {\n      if (customerNameFlag == 'Asc') {\n        setsortOrder(1)\n        getAllSuppliersCustomer(pageNumber, defaultColumnNameCustomer, sortOrder)\n        setcustomerNameFlag('Desc')\n      }\n\n      if (customerNameFlag == 'Desc') {\n        setsortOrder(0)\n\n        getAllSuppliersCustomer(pageNumber, defaultColumnNameCustomer, sortOrder)\n        setcustomerNameFlag('Asc')\n      }\n    }\n  }\n\n  function downloadCsv(e: any) {\n    e.preventDefault()\n\n    let tempData = supplierTableData.length > 0 ? supplierTableData : []\n\n    var data = {\n      fields: ['Supplier_Code', 'Supplier_Name', 'Supplier_Type'],\n      data: tempData.length > 0 ? tempData : [{}],\n    }\n    var csv = PapaParse.unparse(data)\n\n    var csvData = new Blob([csv], {type: 'text/csv;charset=utf-8;'})\n    var csvURL = null\n\n    csvURL = window.URL.createObjectURL(csvData)\n\n    var tempLink = document.createElement('a')\n    tempLink.href = csvURL\n    tempLink.setAttribute('download', 'Supplier.csv')\n    tempLink.click()\n  }\n\n  token = JSON.parse(localStorage.getItem('portalUserDataToken') || '')\n  user = JSON.parse(localStorage.getItem('portalUserDataRole') || '')\n\n  return (\n    <React.Fragment>\n      {loading == true ? (\n        <React.Fragment>\n          <Skeleton loading={loading} active></Skeleton>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <ol className='breadcrumb breadcrumb-dot fs-6 fw-bold' style={{margin: '1%'}}>\n            <Link to='/home' className='pe-1 cursor-pointer'>\n              <li className='breadcrumb-item pe-1'>Home</li>\n            </Link>\n            / &nbsp;<li className='breadcrumb-item pe-3'>Supplier List</li>\n          </ol>\n          <PageTitle breadcrumbs={[]}>{intl.formatMessage({id: 'MENU.DASHBOARD'})}</PageTitle>\n\n          <div className='row g-5 gx-xxl-8' style={{marginTop: '1%'}}>\n            <div className='col-xl-12'>\n              <div className={`card `}>\n                <div className='card-header border-0 pt-2'>\n                  <h3 className='card-title align-items-start flex-column'>\n                    <span\n                      className='card-label fw-bolder fs-3 mb-1'\n                      style={{color: 'rgb(138, 38, 80)'}}\n                    >\n                      Suppliers\n                    </span>\n                  </h3>\n\n                  <div className='card-toolbar' style={{width: '30%'}}>\n                    <input\n                      type='search'\n                      onChange={onSearchProduct}\n                      className='form-control form-control-solid'\n                      placeholder={\n                        tabSelected == 'Suppliers'\n                          ? 'Search by Supplier Code / Name '\n                          : 'Search by Customer Code / Name '\n                      }\n                    />\n                  </div>\n\n                  <div\n                    className='card-toolbar'\n                    data-bs-toggle='tooltip'\n                    data-bs-placement='top'\n                    data-bs-trigger='hover'\n                  ></div>\n                </div>\n\n                <div className='card-body py-3 '>\n                  <ul className='nav nav-custom nav-tabs nav-line-tabs nav-line-tabs-2x border-0 fs-4 fw-bold mb-8'>\n                    <li className='nav-item'>\n                      <a\n                        className='nav-link text-active-primary pb-4 active'\n                        data-bs-toggle='tab'\n                        href='#latestPO'\n                        onClick={() => settabSelected('Suppliers')}\n                      >\n                        Supplier\n                      </a>\n                    </li>\n                    <li className='nav-item'>\n                      <a\n                        className='nav-link text-active-primary pb-4 '\n                        data-kt-countup-tabs='true'\n                        data-bs-toggle='tab'\n                        href='#historicalPO'\n                        onClick={() => settabSelected('Customers')}\n                      >\n                        Customer\n                      </a>\n                    </li>\n                  </ul>\n                  <div className='tab-content' id='myTabContent'>\n                    <div className='tab-pane fade show active' id='latestPO' role='tabpanel'>\n                      <div className='table-responsive h-550px table-scroll'>\n                        <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 main-table'>\n                          <thead>\n                            <tr className='fw-bolder text-muted'>\n                              <th className='w-25px'></th>\n\n                              <th\n                                className='min-w-200px '\n                                onClick={() => onSortSupplierList('Supplier_Code')}\n                              >\n                                Code\n                                {supplierCodeFlag != 'Desc' ? (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr062.svg'}\n                                  />\n                                ) : (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr068.svg'}\n                                  />\n                                )}\n                              </th>\n                              <th\n                                className='min-w-300px text-start'\n                                onClick={() => onSortSupplierList('Supplier_Name')}\n                              >\n                                Name\n                                {supplierNameFlag != 'Desc' ? (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr062.svg'}\n                                  />\n                                ) : (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr068.svg'}\n                                  />\n                                )}\n                              </th>\n                              {/* <th\n                            className='min-w-100px'\n                            onClick={() => onSortSupplierList('Supplier_Type')}\n                          >\n                            Type\n                            {supplierTypeFlag != 'Desc' ? (\n                              <KTSVG\n                                className='text-hover-primary cursor-pointer'\n                                path={'/media/icons/duotune/arrows/arr062.svg'}\n                              />\n                            ) : (\n                              <KTSVG\n                                className='text-hover-primary cursor-pointer'\n                                path={'/media/icons/duotune/arrows/arr068.svg'}\n                              />\n                            )}\n                          </th> */}\n                            </tr>\n                          </thead>\n                          {loadingT == true ? (\n                            <div className='spin_example'>\n                              <Spin size='large' tip='Loading...' spinning={loadingT} />\n                            </div>\n                          ) : (\n                            <tbody>\n                              {supplierData != undefined &&\n                                supplierData.map((j: any, k: any) => {\n                                  return (\n                                    <tr>\n                                      <td></td>\n\n                                      <td>\n                                        <Link\n                                          to={{\n                                            pathname: '/supplier',\n                                            state: {\n                                              id: j.Supplier_Id,\n                                              name: j.Supplier_PostCOde,\n                                              code: j.Supplier_Name,\n                                            },\n                                          }}\n                                        >\n                                          <span className='text-dark fw-bolder text-hover-primary d-block fs-6'>\n                                            {j.Supplier_Code}\n                                          </span>\n                                        </Link>\n                                      </td>\n                                      <td>\n                                        <span className='text-dark fw-bolder text-hover-primary d-block fs-6'>\n                                          {j.Supplier_Name}\n                                        </span>\n                                      </td>\n                                      {/* <td>\n                                    <span className='text-dark fw-bolder text-hover-primary d-block fs-6'>\n                                      {j.Supplier_Type}\n                                    </span>\n                                  </td> */}\n                                      <td></td>\n                                      <td></td>\n                                    </tr>\n                                  )\n                                })}\n                            </tbody>\n                          )}\n                        </table>\n                      </div>\n                      <Pagination\n                        defaultCurrent={pageNumber}\n                        total={rowCount}\n                        onChange={handleTableChange}\n                        style={{margin: '2%'}}\n                        current={pageNumber}\n                        showQuickJumper\n                        showSizeChanger={false}\n                        pageSize={30}\n                      />\n                    </div>\n\n                    <div className='tab-pane fade show ' id='historicalPO' role='tabpanel'>\n                      <div className='table-responsive h-550px table-scroll'>\n                        <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 main-table'>\n                          <thead>\n                            <tr className='fw-bolder text-muted'>\n                              <th className='w-25px'></th>\n\n                              <th\n                                className='min-w-200px '\n                                onClick={() => onSortSupplierListCustomers('Customer_Code')}\n                              >\n                                Code\n                                {customerCodeFlag != 'Desc' ? (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr062.svg'}\n                                  />\n                                ) : (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr068.svg'}\n                                  />\n                                )}\n                              </th>\n                              <th\n                                className='min-w-300px text-start'\n                                onClick={() => onSortSupplierListCustomers('Customer_Name')}\n                              >\n                                Name\n                                {customerNameFlag != 'Desc' ? (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr062.svg'}\n                                  />\n                                ) : (\n                                  <KTSVG\n                                    className='text-hover-primary cursor-pointer'\n                                    path={'/media/icons/duotune/arrows/arr068.svg'}\n                                  />\n                                )}\n                              </th>\n                              {/* <th\n                            className='min-w-100px'\n                            onClick={() => onSortSupplierListCustomers('Supplier_Type')}\n                          >\n                            Type\n                            {supplierTypeFlag != 'Desc' ? (\n                              <KTSVG\n                                className='text-hover-primary cursor-pointer'\n                                path={'/media/icons/duotune/arrows/arr062.svg'}\n                              />\n                            ) : (\n                              <KTSVG\n                                className='text-hover-primary cursor-pointer'\n                                path={'/media/icons/duotune/arrows/arr068.svg'}\n                              />\n                            )}\n                          </th> */}\n                            </tr>\n                          </thead>\n                          {loadingT == true ? (\n                            <div className='spin_example'>\n                              <Spin size='large' tip='Loading...' spinning={loadingT} />\n                            </div>\n                          ) : (\n                            <tbody>\n                              {customerData != undefined &&\n                                customerData.map((j: any, k: any) => {\n                                  return (\n                                    <tr>\n                                      <td></td>\n\n                                      <td>\n                                        <Link\n                                          to={{\n                                            pathname: '/supplier',\n                                            state: {\n                                              id: j.Customer_Id,\n                                              name: j.Customer_Name,\n                                              code: j.Customer_Code,\n                                            },\n                                          }}\n                                        >\n                                          <span className='text-dark fw-bolder text-hover-primary d-block fs-6'>\n                                            {j.Customer_Code}\n                                          </span>\n                                        </Link>\n                                      </td>\n                                      <td>\n                                        <span className='text-dark fw-bolder text-hover-primary d-block fs-6'>\n                                          {j.Customer_Name}\n                                        </span>\n                                      </td>\n                                      {/* <td>\n                                    <span className='text-dark fw-bolder text-hover-primary d-block fs-6'>\n                                      {j.Supplier_Type}\n                                    </span>\n                                  </td> */}\n                                      <td></td>\n                                      <td></td>\n                                    </tr>\n                                  )\n                                })}\n                            </tbody>\n                          )}\n                        </table>\n                      </div>\n                      <Pagination\n                        defaultCurrent={pageNumber}\n                        total={rowCountCustomer}\n                        onChange={handleTableChange}\n                        style={{margin: '2%'}}\n                        current={pageNumber}\n                        showQuickJumper\n                        showSizeChanger={false}\n                        pageSize={30}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(SupplierListWrapper)\n"],"names":["user","token","withRouter","SupplierListWrapper","intl","useIntl","history","useHistory","loading","setloading","useState","supplierData","setSupplierData","customerData","setcustomerData","supplierTableData","setSupplierTableData","customerTableData","setCustomerTableData","pageNumber","setpageNumber","rowCount","setrowCount","rowCountCustomer","setrowCountCustomer","defaultColumnName","setdefaultColumnName","defaultColumnNameCustomer","setdefaultColumnNameCustomer","sortOrder","setsortOrder","loadingT","setloadingT","supplierCodeFlag","setsupplierCodeFlag","customerCodeFlag","setcustomerCodeFlag","supplierNameFlag","setsupplieNameFlag","customerNameFlag","setcustomerNameFlag","supplierTypeFlag","setsupplierTypeFlag","tabSelected","settabSelected","getAllSuppliers","fetch","concat","mainConfig","MAIN_ENDPOINT","method","headers","Authorization","Accept","then","response","status","localStorage","clear","window","location","reload","json","data","suppliers","rowCnt","catch","err","console","log","getAllSuppliersCustomer","customers","handleTableChange","page","onSortSupplierList","onSortSupplierListCustomers","useEffect","includes","push","pathname","JSON","parse","getItem","_jsx","React","children","Skeleton","active","_jsxs","className","style","margin","Link","to","PageTitle","breadcrumbs","formatMessage","id","marginTop","color","width","type","onChange","e","n","target","value","searchdata","Array","map","i","l","Customer_Code","toLowerCase","Customer_Name","Supplier_Code","Supplier_Name","placeholder","href","onClick","role","KTSVG","path","Spin","size","tip","spinning","undefined","j","k","state","Supplier_Id","name","Supplier_PostCOde","code","Pagination","defaultCurrent","total","current","showQuickJumper","showSizeChanger","pageSize","Customer_Id"],"sourceRoot":""}
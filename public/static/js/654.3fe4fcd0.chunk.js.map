{"version":3,"file":"static/js/654.3fe4fcd0.chunk.js","mappings":"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","sources":["app/pages/mainPages/AllMarketTrends.tsx","app/pages/mainPages/ApiForgetdata.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Table, Pagination} from 'antd'\nimport {ApifordataPost, Apifordataget} from './ApiForgetdata'\nimport {Link, withRouter} from 'react-router-dom'\nimport moment from 'moment'\n\n\n\nconst columns = [\n  {\n    title: 'Agg Code',\n    dataIndex: 'ac4',\n    key: 'ac4',\n    sorter: true,\n  },\n  {\n    title: 'Trend',\n    dataIndex: 'trend',\n    key: 'trend',\n    sorter: true,\n  },\n  // {\n  //   title: 'Comment',\n  //   dataIndex: 'comment',\n  //   key: 'comment',\n  //   sorter: true,\n  // },\n  {\n    title: 'Added by',\n    dataIndex: 'created_by',\n    key: 'created_by',\n    sorter: true,\n  },\n  {\n    title: 'Added on',\n    dataIndex: 'created_on',\n    key: 'created_on',\n    sorter: true,\n    render: (item: string) => {\n      if (!item) return <>-</>\n      return moment(item).format('DD-MMM-YYYY')\n    },\n  },\n]\n\nconst AllMarketTrends = (props: any) => {\n  const [data, setData] = useState<[]>([])\n  const [totalPage, setTotalPage] = useState<any>(1)\n  const [loader, setLoader] = useState<any>(false)\n  const [currentPage, setCurrentPage] = useState<any>(1)\n  const [rowCnt, setrowCnt] = useState<any>(1)\n  const [sorter, setsorter] = useState<any>({\n    columnKey: 'created_at',\n    order: 'descend',\n  })\n  useEffect(() => {\n    getData()\n  }, [sorter, currentPage])\n  const getData = async () => {\n    setLoader(true)\n    let api = `/api/get-product-trends/${currentPage}/${\n      sorter && sorter.columnKey ? sorter.columnKey : 'created_at'\n    }/${sorter && sorter.order && sorter.order == 'ascend' ? 1 : 0}`\n\n    let response: any = await Apifordataget(api)\n    if (response && response.message) {\n      setData(response.data.trends)\n      setTotalPage(response.data.trends_count)\n      setrowCnt(response.data.trends_count)\n      setLoader(false)\n    }\n  }\n  return (\n    <>\n      <div className='pt-4 m-2'>\n        <div className='card'>\n          <div className='card-body py-3 '>\n            <div className='row m-4 p-2'>\n              <div className='col-4'>\n                <div className='card-toolbar' style={{width: '100%'}}>\n                  <h3 className='card-title align-items-start flex-column'>\n                    <span\n                      className='card-label fw-bolder fs-3 mb-1'\n                      style={{color: 'rgb(138, 38, 80)'}}\n                    >\n                    All Market Trends\n                      {/* <>({dateTodayes})</> */}\n                    </span>\n                  </h3>\n                </div>\n              </div>\n\n              <div className='col-4'>\n                <div className='text-center'>\n                  {/* <Tooltip placement=\"topLeft\" title={\"Notify Pricer\"}>\n              <Popconfirm\n  title=\"Are you sure? Do you want to mark watchlist as completed and notify Pricer?\"\n  // description=\"Are you sure to delete this task?\"\n  onConfirm={handleNotification}\n  okText=\"Yes\"\n  cancelText=\"No\"\n>\n                <Button type=\"primary\"   loading={buttonLoader}>Notify Pricer</Button>\n                </Popconfirm>\n                </Tooltip> */}\n                </div>\n              </div>\n              <div className='col-4'>\n                <div id='outer'>\n                  <div className='inner p-1'>\n                    {/* <Button type=\"primary\" onClick={() => {\n                  openModal('Search')\n                  }}>Search</Button>\n                  {' '}\n                  <Button type=\"primary\" onClick={() => {\n                  // settitle('')\n                  getBuyerWatchlist()\n                  }}>Reset</Button>&nbsp;\n                    <Button type=\"primary\"\n                 onClick={() => openModal('export_data')}\n                 >Export Data</Button> */}\n                  </div>\n                  <div className='inner p-1'><Link to={{pathname: '/home'}}>\n                <button className='btn btn-sm btn-primary '>Back To Home</button>\n              </Link></div>\n                </div>\n              </div>\n            </div>\n\n            <div className='tab-content' id='myTabContent'>\n              <div className='tab-pane fade show active ' id={''} role='tabpanel'>\n                <Table\n                  columns={columns}\n                  dataSource={data}\n                  loading={loader}\n                  onChange={(val: any, filter: any, sorter: any, extra: any) => {\n                    \n                    setsorter({\n                      ...sorter,\n                    })\n                  }}\n                  scroll={{\n                    x: 'auto',\n                    y: '500px',\n                  }}\n                  pagination={false}\n                />\n                <div className='row text-end m-4'>\n                  <Pagination\n                    defaultCurrent={currentPage}\n                    defaultPageSize={20}\n                    current={currentPage}\n                    total={rowCnt}\n                    onChange={(e) => {\n                      setCurrentPage(e)\n                      // getBuyerWatchlist()\n                    }}\n                    hideOnSinglePage={true}\n                    showSizeChanger={false}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default AllMarketTrends\n","import { mainConfig } from \"../../../config/mainConfig\"\nconst token=JSON.parse(localStorage.getItem('portalUserDataToken') || '')\n\nexport const Apifordataget =(api:any)=>{\n    return new Promise<void>((resolve, reject) => {\n        try {\n            fetch(`${mainConfig.MAIN_ENDPOINT}${api}`, {\n              method: 'get',\n              headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n              },\n            })\n              .then((data: any) => {\n                data.json().then(function (resp: any) {\n                    resolve(resp)\n                })\n              })\n              .catch(function (error) {\n                console.log('Request failed', error)\n              })\n          } catch (err) {\n            console.log('ERR>>>', err)\n          }\n    })\n}\nexport const ApifordataPost =(api:any,data:any)=>{\n\n  // return \n  return new Promise<void>((resolve, reject) => {\n      try {\n          fetch(`${mainConfig.MAIN_ENDPOINT}${api}`, {\n            method: 'Post',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n          })\n            .then((data: any) => {\n              data.json().then(function (resp: any) {\n                  resolve(resp)\n              })\n            })\n            .catch(function (error) {\n              console.log('Request failed', error)\n            })\n        } catch (err) {\n          console.log('ERR>>>', err)\n        }\n  })\n}"],"names":["columns","title","dataIndex","key","sorter","render","item","moment","format","_jsx","_Fragment","children","props","data","setData","useState","totalPage","setTotalPage","loader","setLoader","currentPage","setCurrentPage","rowCnt","setrowCnt","setsorter","columnKey","order","useEffect","getData","async","api","concat","response","Apifordataget","message","trends","trends_count","className","_jsxs","style","width","color","id","Link","to","pathname","role","Table","dataSource","loading","onChange","val","filter","extra","scroll","x","y","pagination","Pagination","defaultCurrent","defaultPageSize","current","total","e","hideOnSinglePage","showSizeChanger","token","JSON","parse","localStorage","getItem","Promise","resolve","reject","fetch","mainConfig","MAIN_ENDPOINT","method","headers","Authorization","Accept","then","json","resp","catch","error","console","log","err","ApifordataPost","body","stringify"],"sourceRoot":""}
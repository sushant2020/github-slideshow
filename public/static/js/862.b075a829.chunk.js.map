{"version":3,"file":"static/js/862.b075a829.chunk.js","mappings":"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","sources":["app/pages/mainPages/RoleManage.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport  React, {FC, useEffect, useState} from 'react'\nimport {useIntl} from 'react-intl'\nimport {Link, withRouter, useHistory} from 'react-router-dom'\nimport { message, Skeleton} from 'antd'\nimport {PageTitle} from '../../../_metronic/layout/core'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport Select from 'react-select'\nimport {mainConfig} from '../../../config/mainConfig'\n\nlet user = '',\n  token = ''\n\n\n\nconst RoleManageWrapper: FC = () => {\n  const intl = useIntl()\n  const history = useHistory()\n\n  const [loading, setloading] = useState<any>(false)\n\n  const [ErrPermission, setErrPermission] = useState<any>(false)\n  const [ErrRole, setErrRole] = useState<any>(false)\n\n  const [roleData, setRoleData] = useState<any[]>([])\n  const [roleTableData, setRoleTableData] = useState<any[]>([])\n  const [rolePermissions, setRolePermissions] = useState<any[]>([])\n\n  const [role, setRole] = useState<any>('')\n  const [roleDescription, setroleDescription] = useState<any>('')\n  const [permissions, setpermissions] = useState<any>([])\n\n  const [roleEdit, setEditRole] = useState<any>('')\n  const [roleEditDescription, setroleEditDescription] = useState<any>('')\n  const [permissionsEdit, setpermissionsEdit] = useState<any>([])\n  const [permissionsEditData, setpermissionsEditData] = useState<any>({})\n  const [flag,setFlag]=useState<any>(false)\n\n  useEffect(() => {\n    if(flag)\n    {\n      return\n    }\n    if (!user || !user.includes('Administrator')) {\n      history.push({\n        pathname: '/home',\n      })\n    } else {\n      setloading(true)\n      getRole()\n    }\n    setFlag(true)\n  }, [])\n\n  const getRole=()=> {\n   \n      fetch(`${mainConfig.MAIN_ENDPOINT}/api/roles`, {\n        method: 'get',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(function (response) {\n          if (response.status != 200) {\n            localStorage.clear()\n            window.location.reload()\n            return\n          }\n\n          response.json().then(function (data) {\n            let tempArr = new Array()\n\n            data.data.all_permissions.map((i: any) => {\n              let obj = {\n                value: i.id,\n                label: i.name,\n              }\n              tempArr.push(obj)\n            })\n\n            setRoleData(data.data.role_with_permission)\n            setRoleTableData(data.data.role_with_permission)\n            setRolePermissions(tempArr)\n            setloading(false)\n          })\n        })\n        .catch(function (err) {\n          console.log('Fetch Error :-S', err)\n          setloading(false)\n        })\n  \n  }\n\n  const createRole=()=> {\n    if (role != '' && permissions.length>0) {\n      let tempPerm = new Array()\n      permissions.map((i: any) => {\n        tempPerm.push(i.label)\n      })\n      const roles = {\n        name: `${role}`,\n        permission: tempPerm,\n        description: `${roleDescription}`,\n      }\n\n      try {\n        fetch(`${mainConfig.MAIN_ENDPOINT}/api/create-role`, {\n          method: 'post',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(roles),\n        })\n          .then(function (data) {\n            data.text().then(function (data) {\n              if (data) {\n                getRole()\n                setloading(false)\n                setRole('')\n                setpermissions([])\n                setroleDescription('')\n                message.success('Role Created Successfully')\n              }\n            })\n            if (data.status == 204) {\n              getRole()\n              setloading(false)\n              setRole('')\n              setpermissions([])\n              setroleDescription('')\n              message.error('Role Already Exist ! ')\n            }\n          })\n          .catch(function (error) {\n            setloading(false)\n          })\n      } catch (err) {}\n      $('#add_role').modal('hide')\n\n      setRole('')\n      setroleDescription('')\n      setpermissions([])\n    } else {\n      if (role == '') {\n        setErrRole(true)\n      }\n      if (permissions == '') {\n        setErrPermission(true)\n      }\n    }\n  }\n\n  const updateRole=()=> {\n    if (roleEdit != '' && permissionsEdit.length>0) {\n      let tempPerm = new Array()\n      permissionsEdit.map((i: any) => {\n        tempPerm.push(i.label)\n      })\n      const roles = {\n        name: `${roleEdit}`,\n        permission: tempPerm,\n        description: `${roleEditDescription}`,\n      }\n\n      let edited_role = JSON.stringify(roles)\n\n      try {\n        fetch(`${mainConfig.MAIN_ENDPOINT}/api/update-role/${permissionsEditData.id}`, {\n          method: 'put',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: edited_role,\n        })\n          .then(function (data) {\n            data.json().then(function (data) {\n              getRole()\n              message.success(data.message)\n              setEditRole('')\n              setroleEditDescription('')\n              setpermissionsEdit('')\n              setloading(false)\n            })\n            if (data.status == 204) {\n              setEditRole('')\n              setroleEditDescription('')\n              setpermissionsEdit('')\n              setloading(false)\n              message.error('Role Already Exist ! ')\n            }\n          })\n          .catch(function (error) {\n            setloading(false)\n          })\n      } catch (err) {}\n      $('#edit_role').modal('hide')\n    } else {\n      if (roleEdit == '') {\n        setErrRole(true)\n      }\n      if (permissionsEdit == '') {\n        setErrPermission(true)\n      }\n    }\n  }\n\n  const editRole=(data: any)=> {\n    let arr1: Array<any> = []\n\n    data.permissions.map((p: any) => {\n      arr1.push({value: p.id, label: p.name})\n    })\n\n    setEditRole(data.name)\n    setroleEditDescription(data.name)\n    setpermissionsEdit(arr1)\n    setpermissionsEditData(data)\n  }\n\n  const onSearchProduct=(e: any)=> {\n    let n = e.target.value\n    let searchdata = new Array()\n\n    roleData.map((i, j) => {\n      if (i.name.toLowerCase().includes(n.toLowerCase())) {\n        searchdata.push(i)\n      }\n    })\n\n    setRoleData(searchdata)\n\n    if (n == '') {\n      setRoleData(roleTableData)\n    }\n  }\n\n  const onDelete=(values: any)=> {\n    setloading(true)\n    try {\n      fetch(`${mainConfig.MAIN_ENDPOINT}/api/delete-role/${values.id}`, {\n        method: 'delete',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(function (data) {\n          data.json().then(function (res) {\n            if (res.success == true) {\n              message.success(res.message)\n              getRole()\n              setloading(false)\n            } else {\n              message.error(res.message)\n              getRole()\n              setloading(false)\n            }\n          })\n        })\n        .catch(function (error) {\n          setloading(false)\n        })\n    } catch (err) {\n      console.log('ERR>>>', err)\n    }\n  }\n\n  token = JSON.parse(localStorage.getItem('portalUserDataToken') || '')\n\n  user = JSON.parse(localStorage.getItem('portalUserDataRole') || '')\n  return (\n    <React.Fragment>\n      {loading == true ? (\n        <React.Fragment>\n          <Skeleton loading={loading} active></Skeleton>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <ol className='breadcrumb breadcrumb-dot fs-6 fw-bold' style={{margin: '1%'}}>\n            <Link to='/home' className='pe-1 cursor-pointer'>\n              <li className='breadcrumb-item pe-1'>Home</li>\n            </Link>\n            / &nbsp;<li className='breadcrumb-item pe-3'>Role Management</li>\n          </ol>\n          <PageTitle breadcrumbs={[]}>{intl.formatMessage({id: 'MENU.DASHBOARD'})}</PageTitle>\n\n          <div className='row g-5 gx-xxl-8' style={{marginTop: '1%'}}>\n            <div className='col-xxl-12'>\n              <div className={`card`}>\n                <div className='card-header border-0 pt-2'>\n                  <h3 className='card-title align-items-start flex-column'>\n                    <span\n                      className='card-label fw-bolder fs-3 mb-1'\n                      style={{color: 'rgb(138, 38, 80)'}}\n                    >\n                      Roles\n                    </span>\n                  </h3>\n\n                  <div className='card-toolbar'>\n                    <input\n                      type='search'\n                      onChange={onSearchProduct}\n                      className='form-control form-control-solid'\n                      placeholder='Search by  Title '\n                    />\n                  </div>\n\n                  <div\n                    className='card-toolbar'\n                    data-bs-toggle='tooltip'\n                    data-bs-placement='top'\n                    data-bs-trigger='hover'\n                    title='Click to add new Role'\n                  >\n                    <a\n                      href='#'\n                      className='btn btn-sm btn-primary'\n                      data-bs-toggle='modal'\n                      data-bs-target='#add_role'\n                    >\n                      <KTSVG path='/media/icons/duotune/arrows/arr075.svg' className='svg-icon-3' />\n                      New Role\n                    </a>\n                  </div>\n                </div>\n\n                <div className='card-body py-3'>\n                  <div className='table-responsive h-600px'>\n                    <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n                      <thead>\n                        <tr className='fw-bolder text-muted'>\n                          <th className='w-25px'></th>\n\n                          <th className='min-w-100px'>Title</th>\n\n                          <th className='min-w-100px'>Permission</th>\n\n                          <th className='min-w-80px text-end'>Status</th>\n                          <th className='min-w-50px text-end'>Edit</th>\n                        </tr>\n                      </thead>\n\n                      <tbody>\n                        {roleData != undefined &&\n                          roleData.map((j) => {\n                            return (\n                              <tr>\n                                <td></td>\n\n                                <td>\n                                  <span className='text-dark fw-bolder text-hover-primary d-block fs-6'>\n                                    {j.name}\n                                  </span>\n                                </td>\n\n                                <td>\n                                  {j.permissions.map((i: any) => {\n                                    return (\n                                      <span className='badge badge-light-primary fs-6 fw-bolder m-1'>\n                                        {i.name}\n                                      </span>\n                                    )\n                                  })}\n                                </td>\n\n                                <td>\n                                  <div className='d-flex justify-content-end flex-shrink-0'>\n                                    <div\n                                      className='form-check form-switch'\n                                      title={\n                                        j.is_deleted == 1 ? 'Activate Role' : 'Deactivate Role'\n                                      }\n                                    >\n                                      <input\n                                        className='form-check-input'\n                                        disabled={j.name == 'Administrator' ? true : false}\n                                        type='checkbox'\n                                        id='flexSwitchCheckChecked'\n                                        checked={j.is_deleted == 1 ? false : true}\n                                        onChange={() => onDelete(j)}\n                                      />\n                                    </div>\n                                    &nbsp;\n                                  </div>\n                                </td>\n\n                                <td>\n                                  <div className='d-flex justify-content-end flex-shrink-0'>\n                                    &nbsp;\n                                    <a\n                                      className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                                      data-kt-menu-trigger='click'\n                                      data-bs-toggle='modal'\n                                      data-bs-target='#edit_role'\n                                      onClick={() => editRole(j)}\n                                    >\n                                      <KTSVG\n                                        path='/media/icons/duotune/art/art005.svg'\n                                        className='svg-icon-3'\n                                      />\n                                    </a>\n                                  </div>\n                                </td>\n                              </tr>\n                            )\n                          })}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='modal fade' id='add_role' aria-hidden='true'>\n            <div className='modal-dialog mw-650px'>\n              <div className='modal-content'>\n                <div className='modal-header pb-0 border-0 justify-content-end'>\n                  <div\n                    className='btn btn-sm btn-icon btn-active-color-primary'\n                    data-bs-dismiss='modal'\n                  >\n                    <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-1' />\n                  </div>\n                </div>\n\n                <div className='modal-body scroll-y mx-5 mx-xl-18 pt-0 pb-15'>\n                  <div className='text-center mb-13'>\n                    <h1 className='mb-3'>Add New Role</h1>\n                  </div>\n                  <form className='createRole'>\n                    <div className='fv-row mb-10'>\n                      <label className='form-label fs-6 fw-bolder required text-dark text-left'>\n                        Title :\n                      </label>\n                      <input\n                        className='form-control form-control-solid'\n                        type='input'\n                        value={role}\n                        onChange={(e) => setRole(e.target.value)}\n                        onFocus={() => setErrRole(false)}\n                        placeholder=''\n                      />\n                      {ErrRole == true ? (\n                        <span role='alert' className='text-danger'>\n                          Title is required\n                        </span>\n                      ) : null}\n                    </div>\n\n                    <div className='fv-row mb-10'>\n                      <label className='form-label fs-6 fw-bolder required text-dark text-left'>\n                        Permission :\n                      </label>\n\n                      <Select\n                        value={permissions}\n                        isMulti={true}\n                        onChange={(e) => setpermissions(e)}\n                        options={rolePermissions}\n                        onFocus={() => setErrPermission(false)}\n                      />\n                      {ErrPermission == true ? (\n                        <span role='alert' className='text-danger'>\n                          Permission is required\n                        </span>\n                      ) : null}\n                    </div>\n\n                    <div className='fv-row mb-10'>\n                      <label className='form-label fs-6 fw-bolder text-dark text-left'>\n                        Description :\n                      </label>\n                      <input\n                        type='input'\n                        value={roleDescription}\n                        onChange={(e) => setroleDescription(e.target.value)}\n                        className='form-control form-control-solid'\n                        placeholder=''\n                      />\n                    </div>\n\n                    <button type='button' onClick={createRole} className='btn btn-primary'>\n                      Submit\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='modal fade' id='edit_role' aria-hidden='true'>\n            <div className='modal-dialog mw-650px'>\n              <div className='modal-content'>\n                <div className='modal-header pb-0 border-0 justify-content-end'>\n                  <div\n                    className='btn btn-sm btn-icon btn-active-color-primary'\n                    data-bs-dismiss='modal'\n                  >\n                    <KTSVG path='/media/icons/duotune/arrows/arr061.svg' className='svg-icon-1' />\n                  </div>\n                </div>\n\n                <div className='modal-body scroll-y mx-5 mx-xl-18 pt-0 pb-15'>\n                  <div className='text-center mb-13'>\n                    <h1 className='mb-3'>Edit Role</h1>\n                  </div>\n                  <form className='form'>\n                    <div className='fv-row mb-10'>\n                      <label className='form-label fs-6 fw-bolder required text-dark text-left'>\n                        Title :\n                      </label>\n                      <input\n                        className='form-control form-control-solid'\n                        type='input'\n                        value={roleEdit}\n                        onChange={(e) => setEditRole(e.target.value)}\n                        onFocus={() => setErrRole(false)}\n                        placeholder=''\n                      />\n                      {ErrRole == true ? (\n                        <span role='alert' className='text-danger'>\n                          Role Title is Required\n                        </span>\n                      ) : null}\n                    </div>\n\n                    <div className='fv-row mb-10'>\n                      <label className='form-label fs-6 fw-bolder required text-dark text-left'>\n                        Permission :\n                      </label>\n\n                      <Select\n                        value={permissionsEdit}\n                        isMulti={true}\n                        onChange={(e) => setpermissionsEdit(e)}\n                        options={rolePermissions}\n                        onFocus={() => setErrPermission(false)}\n                      />\n                      {ErrPermission == true ? (\n                        <span role='alert' className='text-danger'>\n                          Permission is Required\n                        </span>\n                      ) : null}\n                    </div>\n\n                    <div className='fv-row mb-10'>\n                      <label className='form-label fs-6 fw-bolder text-dark text-left'>\n                        Description :\n                      </label>\n                      <input\n                        type='input'\n                        value={roleEditDescription}\n                        onChange={(e) => setroleEditDescription(e.target.value)}\n                        className='form-control form-control-solid'\n                        placeholder=''\n                      />\n                    </div>\n\n                    <button type='button' onClick={updateRole} className='btn btn-primary'>\n                      Submit\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default withRouter(RoleManageWrapper)\n"],"names":["user","token","withRouter","RoleManageWrapper","intl","useIntl","history","useHistory","loading","setloading","useState","ErrPermission","setErrPermission","ErrRole","setErrRole","roleData","setRoleData","roleTableData","setRoleTableData","rolePermissions","setRolePermissions","role","setRole","roleDescription","setroleDescription","permissions","setpermissions","roleEdit","setEditRole","roleEditDescription","setroleEditDescription","permissionsEdit","setpermissionsEdit","permissionsEditData","setpermissionsEditData","flag","setFlag","useEffect","includes","getRole","push","pathname","fetch","concat","mainConfig","MAIN_ENDPOINT","method","headers","Authorization","Accept","then","response","status","localStorage","clear","window","location","reload","json","data","tempArr","Array","all_permissions","map","i","obj","value","id","label","name","role_with_permission","catch","err","console","log","JSON","parse","getItem","_jsx","React","children","Skeleton","active","_jsxs","className","style","margin","Link","to","PageTitle","breadcrumbs","formatMessage","marginTop","color","type","onChange","e","n","target","searchdata","j","toLowerCase","placeholder","title","href","KTSVG","path","undefined","is_deleted","disabled","checked","values","res","success","message","error","onDelete","onClick","arr1","p","editRole","onFocus","Select","isMulti","options","createRole","length","tempPerm","roles","permission","description","body","stringify","text","$","modal","updateRole","edited_role"],"sourceRoot":""}